[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "pywemo-esev"
version = "0.9.1rc19"
description = "Lightweight Python module to discover and control WeMo devices"
authors = ["Eric Severance <pywemo@esev.com>"]
license = "MIT"
packages = [
    { include = "pywemo" },
]

readme = 'README.rst'

repository = "https://github.com/esev/pywemo"
homepage = "https://github.com/esev/pywemo"

keywords = ['wemo', 'api']

[tool.poetry.dependencies]
python = "^3.8.1"
ifaddr = ">=0.1.0"
requests = ">=2.0"
urllib3 = ">=1.26.0"
lxml = "^4.6"

[tool.poetry.group.dev.dependencies]
# toml is used by multiple tools to read this pyproject.toml file
toml = ">=0.10"
# formatters
black = "23.3.0"
isort = "^5.6.4"
# linters/code analysis
flake8 = "^6.0.0"
flake8-docstrings = ">=1.3.0"
flake8-bugbear = ">=20.11.1"
pylint = "^2.17.4"
rstcheck = "^6.1.2"
mypy = "^1.3.0"
# testing and code coverage
pytest = "^7.3.1"
pytest-vcr = "1.0.2"
types-requests = ">=2.0"
coverage = "^7.2.4"
# version of generateDS used to create device.py and service.py in .../api/xsd
generateDS = "2.37.11"
# other
deptry = "^0.11.0"
pre-commit = "^3.3"
poetry-pre-commit-plugin = "^0.1.2"

[tool.poetry.group.bootstrap.dependencies]
poetry = ">=1.2.0"

[tool.coverage]
  [tool.coverage.run]
  branch = true
  data_file = ".cache/coverage"
  omit = [
    ".venv/*",
    "*/tests/*",
    "*/xsd/device.py",
    "*/xsd/service.py",
  ]
  [tool.coverage.lcov]
  output = ".cache/coverage.lcov"

[tool.deptry]
extend_exclude = ["scripts"]
ignore_missing = [
  # These are created by generateDS.
  "generatedsnamespaces",
  "generatedscollector",
  "generatedssuper"
]

[tool.pytest]
  [tool.pytest.ini_options]
  minversion = "6.2"
  cache_dir = ".cache/pytest"

[tool.black]
line-length = 79
skip-string-normalization = true
include = '\.pyi?$'
force-exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv*
    | \venv*
    | _build
    | buck-out
    | build
    | dist
  )/
  | pywemo/ouimeaux_device/api/xsd/
)
'''

[tool.isort]
profile = "black"
line_length = 79
src_paths = ["pywemo", "tests"]
skip_glob = "*/xsd/*"

[tool.mypy]
show_error_codes = true
ignore_missing_imports = true
strict_equality = true
warn_incomplete_stub = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_return_any = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = [
  "pywemo.ouimeaux_device.api.db_orm",
  "pywemo.ouimeaux_device.api.rules_db",
  "pywemo.ouimeaux_device.api.xsd.*",
  "tests.*",
]
ignore_errors = true

[tool.pylint]
  [tool.pylint.master]
  jobs = 0
  max-line-length = 79
  ignore-paths = "^(pywemo/ouimeaux_device/api/xsd/|tests/)"
  extension-pkg-whitelist = "lxml"
  max-parents = 15

  [tool.pylint.message_control]
  disable = [
    "duplicate-code",
    "too-few-public-methods",
    "too-many-arguments",
    "too-many-branches",
    "too-many-instance-attributes",
    "too-many-locals",
    "too-many-public-methods",
    "too-many-return-statements",
    "too-many-statements",
    "unused-argument",
  ]

  [tool.pylint.typecheck]
  generated-members = [
    # can switch to qualified names instead when this is merged:
    # https://github.com/PyCQA/pylint/pull/3634
    "self.deviceevent",
    "self.basicevent",
    "self.bridge",
    "self.insight",
  ]
  ignored-classes = [
    # these have dynamically assigned attributes, so ignore their attributes
    "DatabaseRow",
    "RulesRow",
    "RuleDevicesRow",
    "DeviceCombinationRow",
    "GroupDevicesRow",
    "LocationInfoRow",
    "BlockedRulesRow",
    "RulesNotifyMessageRow",
    "SensorNotificationRow",
    "TargetDevicesRow",
  ]

  [tool.pylint.reports]
  reports = "no"

  [tool.pylint.format]
  expected-line-ending-format = "LF"
  good-names = [
    "i",
    "s",
    "st",
    "db",
    "eventSubURL",
    "uniqueID",
    "on",
    "controlURL",
    "serviceType",
  ]
