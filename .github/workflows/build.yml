name: Build
on:
  pull_request:
  push:
    branches:
    - main
    - pywemo_esev
  workflow_call:
    outputs:
      version:
        description: "Version of built module"
        value: ${{ jobs.build.outputs.version }}

permissions: {}  # No permissions needed for this workflow.

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.build.outputs.version }}
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Build
        id: build
        env:
          OUTPUT_ENV_VAR: GITHUB_OUTPUT
        continue-on-error: true
        run: |
          ./scripts/build.sh && RC=0 || RC=$?
          mkdir -p ./.cache  # This directory is in .gitignore
          git diff > ./.cache/build-changes.patch
          echo "build-changes-size=$(stat -c %s ./.cache/build-changes.patch)" | tee -a "$GITHUB_OUTPUT"
          exit $RC
      - name: Upload build changes
        if: steps.build.outputs.build-changes-size > 2
        uses: actions/upload-artifact@v3
        with:
          if-no-files-found: error
          name: build-changes-${{ matrix.python-version }}
          path: .cache/build-changes.patch
      - name: Fail on build error or changes
        if: steps.build.outcome != 'success' || steps.build.outputs.build-changes-size > 2
        run: exit 1
      - name: Archive build artifacts
        uses: actions/upload-artifact@v3
        with:
          if-no-files-found: error
          name: dist-${{ matrix.python-version }}
          path: dist/
      - name: Archive coverage results
        uses: actions/upload-artifact@v3
        with:
          if-no-files-found: error
          name: coverage-${{ matrix.python-version }}
          path: ${{ steps.build.outputs.coverage-lcov }}

  # Coverage reporting is its own step so it can optionally fail if coveralls
  # is experiencing issues. pyWeMo doesn't currently have any logic that is
  # different between Python versions, so the coverage output from only one
  # version needs to be reported. Change the artifact name to use the coverage
  # from a different matrix build version.
  coverage:
    name: Report coverage to coveralls.io
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: coverage-3.10
      - uses: coverallsapp/github-action@v2
        with:
          path-to-lcov: ${{ steps.build.outputs.coverage-lcov }}
